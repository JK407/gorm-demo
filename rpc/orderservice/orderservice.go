// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package orderservice

import (
	"context"

	"test_demo/rpc/order"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetUserRequest  = order.GetUserRequest
	GetUserResponse = order.GetUserResponse
	UserRow         = order.UserRow

	OrderService interface {
		GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	}

	defaultOrderService struct {
		cli zrpc.Client
	}
)

func NewOrderService(cli zrpc.Client) OrderService {
	return &defaultOrderService{
		cli: cli,
	}
}

func (m *defaultOrderService) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	client := order.NewOrderServiceClient(m.cli.Conn())
	return client.GetUser(ctx, in, opts...)
}
